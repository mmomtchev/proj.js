name: 'CI'
on: [pull_request, push]

jobs:
  swig:
    runs-on: ubuntu-latest
    name: Generate the SWIG wrappers

    strategy:
      fail-fast: false

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true
    - uses: mmomtchev/setup-swig@main
      with:
        branch: jse
        version: v5.0.5
        
    - name: Verify SWIG
      run: swig-jse -version

    - name: Run SWIG to generate the wrappers
      run: npm run swig

    - name: Upload SWIG-generated wrappers
      uses: actions/upload-artifact@v4
      with:
        name: swig-generated
        path: |
          swig/*

  
  build-native:
    name: Build native ${{ matrix.platform }}
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]

    uses:
      mmomtchev/proj.js/.github/workflows/build.yml@modular-build
    with:
      platform: ${{ matrix.platform }}
      native: true
      wasm: false
      id: native-${{ matrix.platform }}

  build-wasm:
    name: Build WASM
    needs: swig

    strategy:
      fail-fast: false
      matrix:
        inline_projdb: [true, false]

    uses:
      mmomtchev/proj.js/.github/workflows/build.yml@modular-build
    with:
      platform: ubuntu-latest
      native: false
      wasm: true
      id: wasm-inline-${{ matrix.inline_projdb }}


  build-asan:
    name: Build ASAN instrumented version
    needs: swig

    uses:
      mmomtchev/proj.js/.github/workflows/build.yml@modular-build
    with:
      platform: ubuntu-latest
      native: false
      wasm: false
      asan: true
      id: native-asan


  build-codecov:
    name: Build code coverage instrumented version
    needs: swig

    uses:
      mmomtchev/proj.js/.github/workflows/build.yml@modular-build
    with:
      platform: ubuntu-latest
      native: false
      wasm: false
      codecov: true
      id: native-codecov


  test:
    runs-on: ${{ matrix.platform }}
    name: Test ${{ matrix.platform }}
    needs: [ build-wasm, build-native ]

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        inline_projdb: [true, false]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the native artifact ${{ matrix.platform }}
      uses: actions/download-artifact@v4
      with:
        name: native-${{ matrix.platform }}
        path: lib/binding

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm-inline-${{ matrix.inline_projdb }}
        path: lib/binding

    - name: Install dependencies
      run: npm install
    
    - name: Run the Node.js tests
      run: npm run test:nodejs

    - name: Run the browser tests
      uses: coactions/setup-xvfb@v1
      with:
        run: npm run test:browser

    - name: Test building the webpack project
      run: npm run build:webpack


  asan:
    runs-on: ubuntu-latest
    name: Run asan
    needs: [ build-asan, build-wasm ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-version: 18

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm-inline-true
        path: lib/binding

    - name: Download the ASAN instrumented artifact
      uses: actions/download-artifact@v4
      with:
        name: native-asan
        path: lib/binding

    - name: Install dependencies
      run: |
        npm install
        npx xpm install
    
    - name: Run the Node.js tests
      run: npm run test:nodejs
      env:
        LD_PRELOAD: /usr/lib/x86_64-linux-gnu/libasan.so.6
        LSAN_OPTIONS: suppressions=${{ github.workspace }}/test/napi-leaks-suppression.txt


  codecov:
    runs-on: ubuntu-latest
    name: Run code coverage
    needs: [ build-codecov, build-wasm ]

    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Setup Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Download the WASM artifact
      uses: actions/download-artifact@v4
      with:
        name: wasm-inline-true
        path: lib/binding

    - name: Download the code coverage artifact
      uses: actions/download-artifact@v4
      with:
        name: native-codecov
        path: lib/binding

    - name: Install dependencies
      run: |
        npm install
        npx xpm install
    
    - name: Run the Node.js tests
      run: npx c8 npm run test:nodejs

    - name: Collect code coverage
      run: |
        npm run gcov
        npm run lcov

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: coverage
        slug: mmomtchev/proj.js
